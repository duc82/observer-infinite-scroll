{"version":3,"file":"index.es.js","sources":["../src/InfiniteScroll.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nexport interface InfiniteScrollProps {\r\n  /** A `function` to load more items\r\n   * @property {Function} fetchMore\r\n   * @return {void}\r\n   * @requires `true`\r\n   */\r\n  fetchMore: () => void;\r\n  /** A `boolean` value to determine if there are more items to load\r\n   * @property {boolean} hasMore\r\n   * @requires `true`\r\n   */\r\n  hasMore: boolean;\r\n  /**\r\n   * An optional loading indicator to display while more items are being loaded.\r\n   * @property {JSX.Element} [loader]\r\n   * @optional\r\n   * @default <p>Loading...</p>\r\n   */\r\n  loader?: JSX.Element;\r\n  /**\r\n   * An optional message to display when there are no more items to load.\r\n   * @property {JSX.Element} [endMessage]\r\n   * @optional\r\n   * @default <p>No more items to load.</p>\r\n   */\r\n  endMessage?: JSX.Element;\r\n  /**\r\n   * An optional threshold value to trigger the `fetchMore` function before reaching the bottom of the scroll container.\r\n   * @property {number} [threshold]\r\n   * @optional\r\n   * @default 0.8\r\n   */\r\n  threshold?: number;\r\n  /**\r\n   * An optional position value to set the scroll container's position.\r\n   * @property {\"top\" | \"bottom\"} [position]\r\n   * @optional\r\n   * @default \"bottom\"\r\n   */\r\n  position?: \"top\" | \"bottom\";\r\n  /**\r\n   * An optional class name to apply to the scroll container.\r\n   * @property {string} [className]\r\n   * @optional\r\n   */\r\n  className?: string;\r\n  /**\r\n   * An optional style object to apply to the scroll container.\r\n   * @property {React.CSSProperties} [style]\r\n   * @optional\r\n   */\r\n  style?: React.CSSProperties;\r\n  /**\r\n   * The items to display in the scroll container.\r\n   * @property {React.ReactNode} children\r\n   * @requires `true`\r\n   */\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * A component that renders a scroll container with infinite scroll capabilities.\r\n * @property {InfiniteScrollProps} props\r\n * @returns {JSX.Element}\r\n * @version 1.1.6\r\n */\r\nconst InfiniteScroll = ({\r\n  fetchMore,\r\n  hasMore,\r\n  loader = <p>Loading...</p>,\r\n  endMessage = <p>No more items to load.</p>,\r\n  threshold = 0.8,\r\n  position = \"bottom\",\r\n  className,\r\n  style,\r\n  children,\r\n}: InfiniteScrollProps): JSX.Element => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting && !isLoading && hasMore) {\r\n          setIsLoading(true);\r\n          fetchMore();\r\n        }\r\n      },\r\n      { threshold }\r\n    );\r\n\r\n    if (el) {\r\n      observer.observe(el);\r\n    }\r\n\r\n    return () => {\r\n      if (el) {\r\n        observer.unobserve(el);\r\n      }\r\n    };\r\n  }, [hasMore, isLoading, fetchMore, threshold]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, [fetchMore]);\r\n\r\n  return (\r\n    <div style={style} className={className}>\r\n      {position === \"bottom\" && children}\r\n      {hasMore ? <div ref={ref}>{loader}</div> : endMessage}\r\n      {position === \"top\" && children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfiniteScroll;\r\n"],"names":["InfiniteScroll","fetchMore","hasMore","loader","React","endMessage","threshold","position","className","style","children","isLoading","setIsLoading","useState","ref","useRef","useEffect","el","observer","entries"],"mappings":";AAqEA,MAAMA,IAAiB,CAAC;AAAA,EACtB,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC,IAAU,gBAAAC,EAAA,cAAA,KAAA,MAAE,YAAU;AAAA,EACtB,YAAAC,IAAc,gBAAAD,EAAA,cAAA,KAAA,MAAE,wBAAsB;AAAA,EACtC,WAAAE,IAAY;AAAA,EACZ,UAAAC,IAAW;AAAA,EACX,WAAAC;AAAA,EACA,OAAAC;AAAA,EACA,UAAAC;AACF,MAAwC;AACtC,QAAM,CAACC,GAAWC,CAAY,IAAIC,EAAS,EAAK,GAC1CC,IAAMC,EAAuB,IAAI;AAEvC,SAAAC,EAAU,MAAM;AACd,UAAMC,IAAKH,EAAI,SAETI,IAAW,IAAI;AAAA,MACnB,CAACC,MAAY;AACX,QAAIA,EAAQ,CAAC,EAAE,kBAAkB,CAACR,KAAaT,MAC7CU,EAAa,EAAI,GACPX;MAEd;AAAA,MACA,EAAE,WAAAK,EAAU;AAAA,IAAA;AAGd,WAAIW,KACFC,EAAS,QAAQD,CAAE,GAGd,MAAM;AACX,MAAIA,KACFC,EAAS,UAAUD,CAAE;AAAA,IACvB;AAAA,KAED,CAACf,GAASS,GAAWV,GAAWK,CAAS,CAAC,GAE7CU,EAAU,MAAM;AACd,IAAAJ,EAAa,EAAK;AAAA,EAAA,GACjB,CAACX,CAAS,CAAC,mCAGX,OAAI,EAAA,OAAAQ,GAAc,WAAAD,EAChB,GAAAD,MAAa,YAAYG,GACzBR,IAAW,gBAAAE,EAAA,cAAA,OAAA,EAAI,KAAAU,KAAWX,CAAO,IAASE,GAC1CE,MAAa,SAASG,CACzB;AAEJ;"}