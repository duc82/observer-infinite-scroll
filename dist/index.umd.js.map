{"version":3,"file":"index.umd.js","sources":["../src/InfiniteScroll.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\r\n\r\nexport interface InfiniteScrollProps {\r\n  /** A `function` to load more items\r\n   * @property {Function} fetchMore\r\n   * @return {void}\r\n   * @requires `true`\r\n   */\r\n  fetchMore: () => void;\r\n  /** A `boolean` value to determine if there are more items to load\r\n   * @property {boolean} hasMore\r\n   * @requires `true`\r\n   */\r\n  hasMore: boolean;\r\n  /**\r\n   * An optional loading indicator to display while more items are being loaded.\r\n   * @property {JSX.Element} [loader]\r\n   * @optional\r\n   * @default <p>Loading...</p>\r\n   */\r\n  loader?: JSX.Element | null;\r\n  /**\r\n   * An optional message to display when there are no more items to load.\r\n   * @property {JSX.Element} [endMessage]\r\n   * @optional\r\n   * @default <p>No more items to load.</p>\r\n   */\r\n  endMessage?: JSX.Element | null;\r\n  /**\r\n   * An optional threshold value to trigger the `fetchMore` function before reaching the bottom of the scroll container.\r\n   * @property {number} [threshold]\r\n   * @optional\r\n   * @default 0.8\r\n   */\r\n  threshold?: number;\r\n  /**\r\n   * An optional position value to set the scroll container's position.\r\n   * @property {\"top\" | \"bottom\"} [position]\r\n   * @optional\r\n   * @default \"bottom\"\r\n   */\r\n  position?: \"top\" | \"bottom\";\r\n  /**\r\n   * An optional class name to apply to the scroll container.\r\n   * @property {string} [className]\r\n   * @optional\r\n   */\r\n  className?: string;\r\n  /**\r\n   * An optional style object to apply to the scroll container.\r\n   * @property {React.CSSProperties} [style]\r\n   * @optional\r\n   */\r\n  style?: React.CSSProperties;\r\n  /**\r\n   * The items to display in the scroll container.\r\n   * @property {React.ReactNode} children\r\n   * @requires `true`\r\n   */\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * A component that renders a scroll container with infinite scroll capabilities.\r\n * @property {InfiniteScrollProps} props\r\n * @returns {JSX.Element}\r\n * @version 1.1.7\r\n */\r\nconst InfiniteScroll = forwardRef<HTMLDivElement, InfiniteScrollProps>(\r\n  (\r\n    {\r\n      fetchMore,\r\n      hasMore,\r\n      loader = <p>Loading...</p>,\r\n      endMessage = <p>No more items to load.</p>,\r\n      threshold = 0.8,\r\n      position = \"bottom\",\r\n      className,\r\n      style,\r\n      children,\r\n    },\r\n    ref\r\n  ): JSX.Element => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const fetchMoreRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n      const el = fetchMoreRef.current;\r\n\r\n      const observer = new IntersectionObserver(\r\n        (entries) => {\r\n          if (entries[0].isIntersecting && !isLoading && hasMore) {\r\n            setIsLoading(true);\r\n            fetchMore();\r\n          }\r\n        },\r\n        { threshold }\r\n      );\r\n\r\n      if (el) {\r\n        observer.observe(el);\r\n      }\r\n\r\n      return () => {\r\n        if (el) {\r\n          observer.unobserve(el);\r\n        }\r\n      };\r\n    }, [hasMore, isLoading, fetchMore, threshold]);\r\n\r\n    useEffect(() => {\r\n      setIsLoading(false);\r\n    }, [fetchMore]);\r\n\r\n    return (\r\n      <div ref={ref} style={style} className={className}>\r\n        {position === \"bottom\" && children}\r\n        {hasMore ? <div ref={fetchMoreRef}>{loader}</div> : endMessage}\r\n        {position === \"top\" && children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default InfiniteScroll;\r\n"],"names":["forwardRef","fetchMore","hasMore","loader","React","endMessage","threshold","position","className","style","children","ref","isLoading","setIsLoading","useState","fetchMoreRef","useRef","useEffect","el","observer","entries"],"mappings":"kRAqEuBA,EAAA,WACrB,CACE,CACE,UAAAC,EACA,QAAAC,EACA,OAAAC,EAAUC,EAAA,cAAA,IAAA,KAAE,YAAU,EACtB,WAAAC,EAAcD,EAAA,cAAA,IAAA,KAAE,wBAAsB,EACtC,UAAAE,EAAY,GACZ,SAAAC,EAAW,SACX,UAAAC,EACA,MAAAC,EACA,SAAAC,GAEFC,IACgB,CAChB,KAAM,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1CC,EAAeC,SAAuB,IAAI,EAEhDC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAKH,EAAa,QAElBI,EAAW,IAAI,qBAClBC,GAAY,CACPA,EAAQ,CAAC,EAAE,gBAAkB,CAACR,GAAaV,IAC7CW,EAAa,EAAI,EACPZ,IAEd,EACA,CAAE,UAAAK,CAAU,CAAA,EAGd,OAAIY,GACFC,EAAS,QAAQD,CAAE,EAGd,IAAM,CACPA,GACFC,EAAS,UAAUD,CAAE,CACvB,GAED,CAAChB,EAASU,EAAWX,EAAWK,CAAS,CAAC,EAE7CW,EAAAA,UAAU,IAAM,CACdJ,EAAa,EAAK,CAAA,EACjB,CAACZ,CAAS,CAAC,kBAGX,MAAI,CAAA,IAAAU,EAAU,MAAAF,EAAc,UAAAD,GAC1BD,IAAa,UAAYG,EACzBR,EAAWE,EAAA,cAAA,MAAA,CAAI,IAAKW,CAAe,EAAAZ,CAAO,EAASE,EACnDE,IAAa,OAASG,CACzB,CAEJ,CACF"}